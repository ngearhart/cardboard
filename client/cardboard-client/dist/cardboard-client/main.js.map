{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/navBar.html","webpack:///./src/app/routing-components.ts","webpack:///./src/app/routing-components/music-manager.html","webpack:///./src/app/routing-components/music-viewer-dialog.html","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MusicManagerComponent, PartManagerComponent, UserManagerComponent } from './routing-components';\n\nconst routes: Routes = [{ path: '', component: MusicManagerComponent},\n                        { path: 'parts', component: PartManagerComponent},\n                        { path: 'users', component: UserManagerComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div id=\\\"title\\\" class=\\\"docs-navbar-header app-navbar\\\">\\n  <h1 class=\\\"mat-display-1\\\">Cardboard</h1>\\n  <h4 class=\\\"mat-subheading-1\\\">BLUE BAND DIGITAL LIBRARY</h4>\\n</div>\\n\\n<table style=\\\"width:100%;height:100%;border-collapse: collapse;\\\">\\n  <tbody>\\n    <tr>\\n      <td style=\\\"height:4em;\\\"></td>\\n    </tr>\\n    <tr><td style=\\\"padding: 0.5em;width: 15vw;box-shadow: 0px 0px 20px 5px rgba(50, 50, 50, 0.5);\\\">\\n      <div style=\\\"height:100%;padding-top: 3em;\\\">\\n          <navBar></navBar>\\n        </div>\\n      </td><td>\\n        <div style=\\\"width:100%;height:100%;padding:2em 1em;\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </td></tr>\\n      </tbody>\\n    </table>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cardboard-client';\n}\n\n@Component({\n  selector: 'navBar',\n  templateUrl: './navBar.html'\n})\nexport class NavBarComponent {\n  objectKeys = Object.keys;\n  links = {\"All Music\" : \"/\", \"Manage Parts\": \"/parts\", \"Manage Users\": \"/users\"};\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent, NavBarComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MusicManagerComponent, PartManagerComponent, UserManagerComponent, MusicViewerDialog } from './routing-components';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    MusicManagerComponent,\n    PartManagerComponent,\n    UserManagerComponent,\n    MusicViewerDialog\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    HttpModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MusicViewerDialog\n  ]\n})\nexport class AppModule { }\n","module.exports = \"<button mat-button color=\\\"primary\\\" *ngFor=\\\"let link of objectKeys(links)\\\" [routerLink]=\\\"links[link]\\\" style=\\\"width:100%;text-align: left;\\\">\\r\\n    {{link}}\\r\\n    <mat-icon style=\\\"float:right; padding-top: 4%;\\\" class=\\\"rotating-icon mat-icon\\\" role=\\\"img\\\" svgicon=\\\"keyboard_arrow_right\\\" aria-hidden=\\\"true\\\"><svg focusable=\\\"false\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\\\"></path></svg></mat-icon>\\r\\n</button>\"","import { Component, ViewChild, Inject, ElementRef, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { MatSpinner } from '@angular/material/progress-spinner';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { DomSanitizer, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\r\n\r\n@Component({\r\n    selector: 'music-manager',\r\n    templateUrl: './routing-components/music-manager.html'\r\n})\r\nexport class MusicManagerComponent {\r\n    music = [];\r\n\r\n    unloaded: boolean = true;\r\n    //ViewChild('loading') spinner: MatSpinner;\r\n\r\n    constructor(http: Http, private dialog: MatDialog) {\r\n        http.get(\"http://\" + window.location.hostname + \"/box-api/list-music\").subscribe(res => {\r\n            this.unloaded = false;\r\n            var data = res.json();\r\n            this.music = data;\r\n        });\r\n    }\r\n\r\n    openViewer(id, title): void {\r\n        this.dialog.open(MusicViewerDialog, {data: {id: id, title: title}});\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'music-viewer-dialog',\r\n    templateUrl: './routing-components/music-viewer-dialog.html'\r\n})\r\nexport class MusicViewerDialog implements OnInit {\r\n    ngOnInit(): void {\r\n\r\n        // - - - Only necessary if using id. Multiple dialogs might break this\r\n        // var i: number = 0;\r\n        // while (!document.getElementById('cdk-overlay-' + i++));\r\n        // document.getElementById('cdk-overlay-' + --i).style.maxWidth = '100vw';\r\n\r\n        document.getElementsByClassName(\"cdk-overlay-pane\")[0][\"style\"].maxWidth = '100vw';\r\n    }\r\n    title;\r\n    id;\r\n    url: SafeResourceUrl;\r\n\r\n    frameLoaded: boolean = false;\r\n    \r\n    @ViewChild('iframe') iframe: ElementRef;\r\n\r\n    constructor(\r\n        private self: MatDialogRef<MusicViewerDialog>,\r\n        @Inject(MAT_DIALOG_DATA) data: any, sanitizer: DomSanitizer) {\r\n            this.title = data.title;\r\n            this.id = data.id;\r\n            this.url = sanitizer.bypassSecurityTrustResourceUrl(\"box-api/download?id=\" + this.id);\r\n        }\r\n\r\n    close(): void {\r\n        this.self.close();\r\n    }\r\n \r\n    iframeLoaded(): void {\r\n        this.frameLoaded = true;\r\n        this.iframe.nativeElement.style.visibility = \"visible\";\r\n        console.log(\"load\");\r\n        //this.iframe.nativeElement.width = 0.45 * window.outerWidth;\r\n        //this.iframe.nativeElement.height = 0.9 * window.outerHeight;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'part-manager',\r\n    template: '<p>Part Manager</p>'\r\n})\r\nexport class PartManagerComponent {\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'user-manager',\r\n    template: '<p>User Manager</p>'\r\n})\r\nexport class UserManagerComponent {\r\n\r\n}","module.exports = \"<mat-spinner *ngIf=\\\"unloaded\\\" style=\\\"margin:auto;margin-top:20vh;\\\"></mat-spinner>\\r\\n<mat-list *ngIf=\\\"!unloaded\\\">\\r\\n    <h3 mat-subheader style=\\\"color:rgba(0,0,0,.54);\\\">Music</h3>\\r\\n    <mat-list-item *ngFor=\\\"let song of music\\\" (click)=\\\"openViewer(song.id, song.title);\\\">\\r\\n        <h4 mat-line>{{song.title}}</h4>\\r\\n    </mat-list-item>\\r\\n</mat-list>\"","module.exports = \"<h1 mat-dialog-title>{{title}}</h1>\\r\\n<div mat-dialog-content>\\r\\n    <mat-spinner *ngIf=\\\"!frameLoaded\\\" style=\\\"margin:auto;margin-top:20vh;\\\"></mat-spinner>\\r\\n    <iframe #iframe [src]=\\\"url\\\" (load)=\\\"iframeLoaded()\\\" style=\\\"height: 60vh;width:45vw;visibility:hidden;\\\"></iframe>\\r\\n    <div style=\\\"width:45vw;padding-left:1em;height:60vh;float:right;\\\">\\r\\n        <h3>Content</h3>\\r\\n    </div>\\r\\n</div>\\r\\n<div mat-dialog-actions style=\\\"float:right;\\\">\\r\\n    <button mat-button (click)=\\\"close()\\\">Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"\\\" cdkFocusInitial>Save</button>\\r\\n</div>\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}